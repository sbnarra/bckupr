/* tslint:disable */
/* eslint-disable */
/**
 * Bckupr
 * Bckupr API
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Filters
 */
export interface Filters {
    /**
     * 
     * @type {Array<string>}
     * @memberof Filters
     */
    includeNames: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Filters
     */
    includeVolumes: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Filters
     */
    excludeNames: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Filters
     */
    excludeVolumes: Array<string>;
}

/**
 * Check if a given object implements the Filters interface.
 */
export function instanceOfFilters(value: object): boolean {
    if (!('includeNames' in value)) return false;
    if (!('includeVolumes' in value)) return false;
    if (!('excludeNames' in value)) return false;
    if (!('excludeVolumes' in value)) return false;
    return true;
}

export function FiltersFromJSON(json: any): Filters {
    return FiltersFromJSONTyped(json, false);
}

export function FiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): Filters {
    if (json == null) {
        return json;
    }
    return {
        
        'includeNames': json['include_names'],
        'includeVolumes': json['include_volumes'],
        'excludeNames': json['exclude_names'],
        'excludeVolumes': json['exclude_volumes'],
    };
}

export function FiltersToJSON(value?: Filters | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'include_names': value['includeNames'],
        'include_volumes': value['includeVolumes'],
        'exclude_names': value['excludeNames'],
        'exclude_volumes': value['excludeVolumes'],
    };
}

