/* tslint:disable */
/* eslint-disable */
/**
 * Bckupr
 * Bckupr API
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Status } from './Status';
import {
    StatusFromJSON,
    StatusFromJSONTyped,
    StatusToJSON,
} from './Status';

/**
 * 
 * @export
 * @interface Rotate
 */
export interface Rotate {
    /**
     * 
     * @type {Date}
     * @memberof Rotate
     */
    started: Date;
    /**
     * 
     * @type {Status}
     * @memberof Rotate
     */
    status: Status;
    /**
     * 
     * @type {string}
     * @memberof Rotate
     */
    error?: string;
}

/**
 * Check if a given object implements the Rotate interface.
 */
export function instanceOfRotate(value: object): boolean {
    if (!('started' in value)) return false;
    if (!('status' in value)) return false;
    return true;
}

export function RotateFromJSON(json: any): Rotate {
    return RotateFromJSONTyped(json, false);
}

export function RotateFromJSONTyped(json: any, ignoreDiscriminator: boolean): Rotate {
    if (json == null) {
        return json;
    }
    return {
        
        'started': (new Date(json['started'])),
        'status': StatusFromJSON(json['status']),
        'error': json['error'] == null ? undefined : json['error'],
    };
}

export function RotateToJSON(value?: Rotate | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'started': ((value['started']).toISOString()),
        'status': StatusToJSON(value['status']),
        'error': value['error'],
    };
}

