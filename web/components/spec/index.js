/**
 * Bckupr
 * Bckupr API
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Backup from './model/Backup';
import Error from './model/Error';
import Filters from './model/Filters';
import Restore from './model/Restore';
import Rotate from './model/Rotate';
import RotateInput from './model/RotateInput';
import Status from './model/Status';
import StopModes from './model/StopModes';
import TaskInput from './model/TaskInput';
import Version from './model/Version';
import Volume from './model/Volume';
import BackupApi from './api/BackupApi';
import SystemApi from './api/SystemApi';


/**
* Bckupr API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Bckupr = require('index'); // See note below*.
* var xxxSvc = new Bckupr.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Bckupr.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Bckupr.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Bckupr.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version latest
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Backup model constructor.
     * @property {module:model/Backup}
     */
    Backup,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Filters model constructor.
     * @property {module:model/Filters}
     */
    Filters,

    /**
     * The Restore model constructor.
     * @property {module:model/Restore}
     */
    Restore,

    /**
     * The Rotate model constructor.
     * @property {module:model/Rotate}
     */
    Rotate,

    /**
     * The RotateInput model constructor.
     * @property {module:model/RotateInput}
     */
    RotateInput,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The StopModes model constructor.
     * @property {module:model/StopModes}
     */
    StopModes,

    /**
     * The TaskInput model constructor.
     * @property {module:model/TaskInput}
     */
    TaskInput,

    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version,

    /**
     * The Volume model constructor.
     * @property {module:model/Volume}
     */
    Volume,

    /**
    * The BackupApi service constructor.
    * @property {module:api/BackupApi}
    */
    BackupApi,

    /**
    * The SystemApi service constructor.
    * @property {module:api/SystemApi}
    */
    SystemApi
};
